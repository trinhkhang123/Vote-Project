/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Vote, VoteInterface } from "../Vote";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "Nominee",
        type: "address",
      },
    ],
    name: "AddNominee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "Nominee",
        type: "address",
      },
    ],
    name: "Balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "Voter",
        type: "address",
      },
    ],
    name: "ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IDD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "AddrVoter",
        type: "address",
      },
    ],
    name: "Register",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "AddrNominee",
        type: "address",
      },
    ],
    name: "Votee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "Voter",
        type: "address",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600655600060075534801561001a57600080fd5b5033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bc88061006b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638401583e1161005b5780638401583e14610100578063c23697a814610130578063eeda149c14610160578063f86dee07146101905761007d565b806314fd4f3a14610082578063239fcf0f146100b25780632858507f146100e2575b600080fd5b61009c60048036038101906100979190610823565b6101c0565b6040516100a99190610a8f565b60405180910390f35b6100cc60048036038101906100c79190610823565b610209565b6040516100d99190610a8f565b60405180910390f35b6100ea610252565b6040516100f791906109b9565b60405180910390f35b61011a60048036038101906101159190610823565b61027c565b60405161012791906109d4565b60405180910390f35b61014a60048036038101906101459190610823565b6104e0565b60405161015791906109d4565b60405180910390f35b61017a60048036038101906101759190610823565b610535565b60405161018791906109d4565b60405180910390f35b6101aa60048036038101906101a59190610823565b6106af565b6040516101b791906109d4565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008160011515600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030990610a4f565b60405180910390fd5b33600015156000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c90610a2f565b60405180910390fd5b336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041f90610a0f565b60405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061047890610b03565b919050555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019350505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146105b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105af90610a6f565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f906109ef565b60405180910390fd5b6006600081548092919061065b90610b03565b9190505550600654600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610741576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610738906109ef565b60405180910390fd5b6007600081548092919061075490610b03565b91905055508160036000600754815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b60008135905061081d81610b7b565b92915050565b60006020828403121561083557600080fd5b60006108438482850161080e565b91505092915050565b61085581610abb565b82525050565b61086481610acd565b82525050565b6000610877601c83610aaa565b91507f596f7520617265206e6f7420616e2061646d696e6973747261746f72000000006000830152602082019050919050565b60006108b7601683610aaa565b91507f796f7520617265206e6f742072656769737465726564000000000000000000006000830152602082019050919050565b60006108f7600983610aaa565b91507f596f7520766f74656400000000000000000000000000000000000000000000006000830152602082019050919050565b6000610937601583610aaa565b91507f596f7520617265206e6f742061204e6f6d696e656500000000000000000000006000830152602082019050919050565b6000610977601383610aaa565b91507f596f7520617265207265676973727465726564000000000000000000000000006000830152602082019050919050565b6109b381610af9565b82525050565b60006020820190506109ce600083018461084c565b92915050565b60006020820190506109e9600083018461085b565b92915050565b60006020820190508181036000830152610a088161086a565b9050919050565b60006020820190508181036000830152610a28816108aa565b9050919050565b60006020820190508181036000830152610a48816108ea565b9050919050565b60006020820190508181036000830152610a688161092a565b9050919050565b60006020820190508181036000830152610a888161096a565b9050919050565b6000602082019050610aa460008301846109aa565b92915050565b600082825260208201905092915050565b6000610ac682610ad9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b0e82610af9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4157610b40610b4c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610b8481610abb565b8114610b8f57600080fd5b5056fea26469706673582212203bbcf518d1a09efa3265916cc291f4d334a8a63b31b399424a1b208a397ac0c664736f6c63430008000033";

type VoteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VoteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vote__factory extends ContractFactory {
  constructor(...args: VoteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vote> {
    return super.deploy(overrides || {}) as Promise<Vote>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Vote {
    return super.attach(address) as Vote;
  }
  override connect(signer: Signer): Vote__factory {
    return super.connect(signer) as Vote__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoteInterface {
    return new utils.Interface(_abi) as VoteInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vote {
    return new Contract(address, _abi, signerOrProvider) as Vote;
  }
}
